#include <gtest/gtest.h>
#include "Pixel.hpp"



TEST(PixelTest, RGB2RGBA)
{
	Pixel pixel = RGBPixel{ 1, 128, 255 };	
	auto rgba = pixel.ToRGBA();

	EXPECT_EQ(  1, rgba.red);
	EXPECT_EQ(128, rgba.green);
	EXPECT_EQ(255, rgba.blue);
	EXPECT_EQ(255, rgba.alpha);
}

TEST(PixelTest, RGB2YCbCr)
{
	Pixel pixel = RGBPixel{ 105, 128, 172 };
	auto ycbcr = pixel.ToYCbCr();

	EXPECT_EQ(124, ycbcr.y);
	EXPECT_EQ(151, ycbcr.Cb);
	EXPECT_EQ(115, ycbcr.Cr);
}

TEST(PixelTest, RGBA2RGB)
{
	Pixel pixel = RGBAPixel{ 1, 128, 255, 128 };
	auto rgb = pixel.ToRGB();

	EXPECT_EQ(  1, rgb.red);
	EXPECT_EQ(128, rgb.green);
	EXPECT_EQ(255, rgb.blue);
}

TEST(PixelTest, RGBA2YCbCr)
{
	Pixel pixel = RGBAPixel{ 129, 151, 190, 128 };
	auto ycbcr = pixel.ToYCbCr();

	EXPECT_EQ(144, ycbcr.y);
	EXPECT_EQ(148, ycbcr.Cb);
	EXPECT_EQ(116, ycbcr.Cr);
}

TEST(PixelTest, YCbCr2RGB)
{
	Pixel pixel = YCbCrPixel{ 143, 151, 115 };
	auto rgb = pixel.ToRGB();

	EXPECT_EQ(127, rgb.red);
	EXPECT_EQ(149, rgb.green);
	EXPECT_EQ(194, rgb.blue);
}

TEST(PixelTest, YCbCr2RGBA)
{
	Pixel pixel = YCbCrPixel{ 52, 118, 132 };
	auto rgba = pixel.ToRGBA();

	EXPECT_EQ(48, rgba.red);
	EXPECT_EQ(43, rgba.green);
	EXPECT_EQ(22, rgba.blue);
	EXPECT_EQ( 0, rgba.alpha);
}

// NOTE: Input and output values for test were generated from MATLAB
TEST(PixelTest, RGB2YCbCr16by16)
{
	RGBPixel pixels[16][16] = {
		{{63, 133, 193}, {70, 135, 193}, { 85, 147, 204}, {104, 162, 210}, {64, 130, 190}, {36, 105, 162}, { 60, 126, 184}, {37, 100, 154}, {48, 109, 164}, {63, 124, 179}, {119, 167, 215}, { 99, 151, 201}, {124, 171, 215}, { 71, 128, 181}, { 51, 112, 166}, { 58, 121, 175}},
		{{63, 131, 192}, {71, 137, 197}, { 96, 157, 212}, {120, 171, 218}, {76, 141, 197}, {53, 119, 179}, { 56, 121, 179}, {46, 109, 163}, {74, 135, 190}, {76, 136, 190}, { 98, 149, 202}, {125, 173, 221}, {106, 159, 209}, { 73, 130, 183}, { 48, 109, 163}, { 39, 102, 155}},
		{{63, 133, 193}, {69, 135, 193}, { 97, 158, 212}, {114, 168, 215}, {73, 139, 197}, {51, 116, 172}, { 47, 112, 168}, {51, 112, 167}, {76, 137, 191}, {69, 130, 184}, { 88, 143, 197}, {119, 170, 217}, { 98, 152, 199}, { 83, 143, 195}, { 49, 110, 164}, { 55, 120, 174}},
		{{56, 126, 188}, {80, 145, 201}, {100, 160, 212}, {138, 183, 225}, {76, 141, 197}, {64, 130, 188}, { 78, 141, 195}, {45, 108, 162}, {72, 133, 187}, {72, 133, 188}, { 98, 154, 205}, {108, 162, 208}, { 89, 145, 196}, { 91, 148, 201}, { 52, 117, 171}, {109, 165, 214}},
		{{63, 131, 192}, {80, 145, 201}, { 95, 155, 209}, {128, 179, 222}, {69, 135, 193}, {63, 130, 185}, { 76, 137, 192}, {57, 118, 173}, {63, 124, 179}, {49, 112, 166}, { 74, 134, 188}, { 97, 150, 202}, { 77, 138, 192}, { 85, 145, 197}, { 76, 137, 192}, { 95, 159, 207}},
		{{74, 142, 203}, {76, 142, 200}, { 96, 157, 211}, {122, 174, 221}, {77, 143, 201}, {57, 118, 172}, { 77, 138, 192}, {66, 127, 182}, {70, 133, 187}, {40, 103, 156}, { 48, 109, 163}, { 75, 135, 187}, { 82, 143, 197}, { 80, 141, 195}, {105, 163, 213}, { 60, 125, 179}},
		{{69, 139, 199}, {74, 140, 198}, { 94, 157, 210}, {101, 164, 217}, {70, 139, 198}, {64, 127, 181}, {104, 160, 209}, {55, 118, 172}, {87, 148, 202}, {43, 106, 159}, { 32,  90, 138}, { 72, 133, 187}, { 92, 154, 205}, { 79, 140, 194}, { 64, 129, 183}, { 68, 135, 190}},
		{{75, 145, 205}, {60, 130, 190}, { 85, 152, 207}, { 86, 153, 208}, {82, 151, 206}, {69, 136, 191}, { 70, 133, 186}, {47, 112, 166}, {65, 130, 184}, {45, 108, 161}, { 35,  91, 140}, {107, 161, 208}, { 89, 150, 204}, { 84, 145, 199}, { 64, 129, 183}, { 58, 125, 178}},
		{{53, 124, 186}, {62, 137, 195}, { 73, 143, 203}, { 82, 153, 209}, {97, 162, 216}, {71, 136, 190}, {108, 166, 214}, {52, 117, 171}, {84, 146, 197}, {35,  97, 148}, { 48, 106, 154}, { 94, 147, 201}, { 74, 137, 191}, {106, 164, 212}, { 65, 130, 184}, { 71, 136, 190}},
		{{41, 116, 174}, {50, 126, 186}, { 53, 132, 191}, { 75, 150, 207}, {74, 146, 204}, {70, 137, 192}, { 89, 152, 203}, {55, 120, 174}, {91, 153, 202}, {54, 117, 170}, { 60, 113, 163}, { 58, 114, 165}, { 61, 126, 180}, {109, 167, 215}, { 59, 126, 181}, { 85, 150, 204}},
		{{29, 105, 165}, {43, 127, 191}, { 51, 130, 189}, { 77, 147, 206}, {77, 149, 207}, {73, 144, 200}, { 86, 149, 202}, {53, 118, 172}, {78, 140, 191}, {37, 100, 151}, { 68, 119, 166}, { 62, 118, 167}, { 56, 122, 174}, { 80, 146, 198}, { 62, 131, 186}, { 78, 147, 202}},
		{{29, 107, 169}, {38, 122, 186}, { 52, 128, 186}, { 55, 130, 188}, {74, 149, 206}, {79, 150, 204}, { 68, 135, 188}, {70, 131, 185}, {54, 120, 172}, {39, 100, 147}, { 76, 127, 174}, { 68, 128, 180}, { 62, 122, 174}, { 83, 150, 202}, { 48, 115, 170}, { 76, 141, 195}},
		{{20,  95, 152}, {20, 106, 167}, { 42, 118, 178}, { 54, 129, 187}, {68, 143, 200}, {88, 158, 209}, { 80, 145, 199}, {72, 129, 182}, {44, 106, 155}, {45, 101, 150}, { 85, 136, 183}, { 64, 127, 181}, { 61, 119, 169}, { 61, 128, 181}, { 39, 105, 155}, { 66, 131, 185}},
		{{20, 102, 160}, {14,  93, 150}, { 38, 113, 170}, { 72, 143, 199}, {49, 124, 182}, {77, 144, 199}, { 85, 148, 201}, {74, 135, 182}, {53, 107, 154}, {43, 101, 149}, { 86, 146, 196}, { 55, 122, 175}, { 67, 129, 180}, { 58, 124, 176}, { 55, 118, 169}, { 62, 137, 192}},
		{{29, 111, 171}, {14,  91, 147}, { 23,  96, 151}, { 68, 141, 196}, {79, 150, 204}, {75, 142, 195}, { 60, 118, 166}, {74, 139, 193}, {68, 116, 162}, {42,  96, 142}, { 84, 146, 197}, { 59, 124, 178}, { 77, 133, 180}, { 55, 117, 168}, { 67, 127, 177}, { 60, 131, 185}},
		{{33, 113, 174}, {17,  98, 154}, { 28, 107, 163}, { 61, 134, 189}, {60, 131, 187}, {63, 130, 183}, { 73, 127, 174}, {80, 145, 199}, {80, 131, 178}, {45,  94, 135}, { 81, 141, 191}, { 63, 132, 187}, { 82, 136, 183}, { 55, 113, 161}, { 89, 150, 195}, { 69, 140, 194}}
	};

	YCbCrPixel reference[16][16] = {
		{{118, 165, 93}, {121, 163, 95}, {132, 162, 97}, {145, 158,  99}, {117, 164, 95}, { 94, 163, 94}, {113, 163,  95}, { 91, 161, 96}, { 99, 161,  97}, {112, 161,  97}, {152, 156, 103}, {137, 158, 102}, {155, 154, 104}, {116, 160, 99}, {102, 161, 97}, {109, 161,  96}},
		{{117, 165, 94}, {123, 164, 95}, {141, 161, 97}, {154, 156, 102}, {126, 162, 95}, {107, 164, 95}, {109, 163,  95}, { 99, 161, 96}, {122, 161,  97}, {123, 161,  98}, {136, 159, 102}, {157, 156, 103}, {144, 158, 101}, {118, 160, 99}, { 99, 161, 97}, { 93, 161,  97}},
		{{118, 165, 93}, {121, 163, 95}, {141, 161, 97}, {151, 157, 101}, {124, 163, 95}, {104, 162, 95}, {101, 162,  95}, {102, 161, 97}, {123, 161,  97}, {117, 161,  97}, {130, 160, 100}, {154, 156, 102}, {137, 157, 101}, {128, 160, 98}, {100, 161, 97}, {108, 161,  96}},
		{{112, 166, 93}, {129, 162, 95}, {143, 160, 98}, {166, 153, 105}, {126, 162, 95}, {116, 163, 95}, {126, 161,  96}, { 98, 161, 96}, {120, 161,  97}, {120, 161,  97}, {139, 159, 100}, {146, 156, 101}, {131, 159, 100}, {134, 160, 99}, {105, 161, 96}, {148, 158, 100}},
		{{117, 165, 94}, {129, 162, 95}, {139, 161, 98}, {161, 154, 103}, {121, 163, 95}, {116, 162, 95}, {123, 161,  97}, {107, 161, 97}, {112, 161,  97}, {101, 161,  96}, {121, 161,  98}, {136, 159, 101}, {124, 161,  97}, {130, 160, 98}, {123, 161, 97}, {141, 159,  96}},
		{{126, 165, 94}, {127, 163, 95}, {140, 161, 97}, {157, 156, 102}, {128, 163, 95}, {107, 161, 97}, {124, 161,  97}, {115, 161, 97}, {119, 161,  96}, { 93, 161,  97}, { 99, 161,  97}, {122, 160,  98}, {128, 161,  97}, {127, 161, 97}, {146, 159, 99}, {112, 161,  96}},
		{{123, 165, 93}, {125, 163, 95}, {140, 161, 97}, {146, 161,  97}, {123, 164, 93}, {114, 161, 96}, {144, 158, 100}, {106, 161, 96}, {133, 161,  97}, { 96, 161,  97}, { 83, 158,  99}, {120, 161,  97}, {137, 160,  97}, {126, 161, 97}, {115, 161, 96}, {120, 162,  95}},
		{{128, 165, 93}, {116, 165, 93}, {135, 162, 95}, {136, 162,  95}, {133, 162, 94}, {121, 162, 95}, {119, 161,  97}, {101, 161, 96}, {116, 161,  96}, { 98, 161,  97}, { 85, 158, 100}, {145, 157, 101}, {134, 161,  97}, {130, 161, 97}, {115, 161, 96}, {111, 161,  95}},
		{{110, 166, 92}, {120, 165, 91}, {127, 165, 93}, {135, 163,  93}, {144, 161, 96}, {121, 161, 96}, {148, 158,  99}, {105, 161, 96}, {130, 160,  97}, { 88, 160,  97}, { 97, 158,  99}, {134, 160, 101}, {123, 161,  96}, {147, 158, 99}, {116, 161, 96}, {121, 161,  96}},
		{{102, 165, 91}, {111, 166, 90}, {115, 166, 89}, {131, 164,  91}, {129, 164, 92}, {122, 162, 95}, {135, 160,  97}, {108, 161, 96}, {136, 159,  97}, {105, 161,  97}, {104, 158, 101}, {105, 159, 100}, {113, 161,  96}, {149, 158, 99}, {112, 162, 95}, {133, 161,  96}},
		{{ 93, 166, 90}, {110, 169, 87}, {113, 166, 89}, {130, 164,  93}, {131, 164, 92}, {127, 163, 93}, {133, 161,  97}, {106, 161, 96}, {125, 160,  97}, { 91, 160,  97}, {110, 156, 102}, {108, 158, 100}, {109, 161,  95}, {130, 161, 95}, {116, 162, 94}, {130, 162,  94}},
		{{ 94, 167, 89}, {105, 169, 87}, {112, 165, 90}, {114, 165,  91}, {130, 164, 91}, {132, 162, 93}, {120, 161,  95}, {118, 161, 97}, {107, 161,  95}, { 91, 158,  98}, {117, 156, 102}, {116, 160,  98}, {110, 160,  98}, {133, 161, 95}, {103, 162, 95}, {126, 161,  96}},
		{{ 84, 164, 91}, { 91, 168, 86}, {104, 166, 90}, {113, 165,  91}, {125, 164, 91}, {139, 161, 94}, {129, 161,  96}, {117, 160, 99}, { 96, 159,  97}, { 93, 158, 100}, {124, 156, 102}, {114, 161,  96}, {108, 159,  99}, {114, 161, 95}, { 94, 160, 95}, {117, 161,  96}},
		{{ 88, 166, 88}, { 81, 165, 89}, { 99, 164, 91}, {126, 163,  93}, {109, 165, 91}, {128, 162, 95}, {132, 161,  97}, {121, 158, 98}, { 99, 157, 101}, { 93, 158,  99}, {131, 159,  98}, {109, 161,  95}, {116, 160,  97}, {111, 161, 95}, {106, 160, 97}, {120, 163,  91}},
		{{ 96, 167, 88}, { 80, 164, 90}, { 85, 163, 92}, {124, 163,  92}, {132, 162, 93}, {126, 161, 95}, {107, 158,  99}, {124, 161, 96}, {108, 155, 104}, { 89, 156, 101}, {130, 160,  97}, {111, 161,  96}, {120, 157, 100}, {106, 160, 97}, {115, 159, 98}, {116, 162,  93}},
		{{ 98, 167, 89}, { 85, 165, 88}, { 93, 164, 89}, {118, 163,  92}, {116, 163, 93}, {116, 161, 95}, {116, 157, 101}, {129, 161, 96}, {120, 156, 102}, { 88, 153, 104}, {127, 159,  98}, {117, 162,  94}, {124, 157, 101}, {103, 158, 99}, {134, 157, 98}, {123, 162,  93}}
	};

	for (auto i = 0u; i < 16; i++)
	{
		for (auto j = 0u; j < 16; j++)
		{
			Pixel p = { pixels[i][j] };
			auto yCbCr = p.ToYCbCr();

			EXPECT_NEAR(yCbCr.y,  reference[i][j].y,  1);
			EXPECT_NEAR(yCbCr.Cb, reference[i][j].Cb, 1);
			EXPECT_NEAR(yCbCr.Cr, reference[i][j].Cr, 1);
		}
	}
}
